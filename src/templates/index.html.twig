{% extends '@ThreeBRSSyliusShipmentExportPlugin/layout/resourceless.html.twig' %}

{% block title %}{{ 'threebrs.ui.shippingExport.shipmentExport'|trans }} - {{ exporterLabel }}{% endblock %}

{% block content %}
<div class="row align-items-center mb-4 mt-2">
    <div class="col-md-6">
        <h1 class="h3 d-flex align-items-center">
            <span class="me-2">
                <i class="bi bi-arrow-up-circle-fill"></i>
            </span>
            {{ 'threebrs.ui.shippingExport.shipmentExport'|trans }} - {{ exporterLabel }}
        </h1>
    </div>

    <div class="col-md-6 text-end">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-download me-1"></i>
                {{ 'threebrs.ui.shippingExport.downloadCsvButton'|trans }} (<span class="counter">all</span>)
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="exportDropdown">
                <li>
                    <a class="dropdown-item"
                       href="#"
                       {% if shipments|length == 0 %}class="disabled"{% endif %}
                       data-url="{{ path('threebrs_admin_export_shipments', {'exporterName': exporterName}) }}"
                       onclick="downloadCsv(this, 0)">
                        <i class="bi bi-download me-2"></i>
                        {{ 'threebrs.ui.shippingExport.onlyDownloadCSV'|trans }} (<span class="counter">{{ 'threebrs.ui.shippingExport.allShipment'|trans }}</span>)
                    </a>
                </li>
                <li>
                    <a class="dropdown-item"
                       href="#"
                       {% if shipments|length == 0 %}class="disabled"{% endif %}
                       data-change-state-url="{{ path('threebrs_admin_change_state_shipments', {'exporterName': exporterName}) }}"
                       data-url="{{ path('threebrs_admin_export_shipments', {'exporterName': exporterName}) }}"
                       onclick="downloadCsv(this, 1)">
                        <i class="bi bi-download me-2"></i>
                        {{ 'threebrs.ui.shippingExport.downloadCSVAndSend'|trans }} (<span class="counter">{{ 'threebrs.ui.shippingExport.allShipment'|trans }}</span>)
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-body">
        {% if shipments|length > 0 %}
            {{ include('@ThreeBRSSyliusShipmentExportPlugin/_table.html.twig') }}
        {% else %}
            <div class="alert alert-info mb-0 text-center">
                <i class="bi bi-info-circle"></i>
                {{ 'sylius.ui.no_results_to_display' |trans}}
            </div>
        {% endif %}
    </div>
</div>{% endblock %}

{% block javascripts %}
	{{ parent() }}

	<script>
		document.addEventListener("DOMContentLoaded", function () {
			document.querySelectorAll(".exportCheckbox").forEach(checkbox => {
				checkbox.addEventListener("change", countCheckboxes);
			});
		});

		function countCheckboxes() {
			const checkedCheckboxes = document.querySelectorAll(".exportCheckbox:checked");
			const counterElement = document.querySelector(".counter");

			if (checkedCheckboxes.length > 0) {
				counterElement.innerHTML = checkedCheckboxes.length;
			} else {
				counterElement.innerHTML = "{{ 'threebrs.ui.shippingExport.allShipment'|trans }}";
			}
		}

		function getCheckedCheckboxesIds() {
			let ids = [];
			const checkedCheckboxes = document.querySelectorAll(".exportCheckbox:checked");

			if (checkedCheckboxes.length > 0) {
				checkedCheckboxes.forEach(checkbox => ids.push(checkbox.value));
			} else {
				document.querySelectorAll(".exportCheckbox").forEach(checkbox => ids.push(checkbox.value));
			}

			return ids;
		}

		function testAnswer(regex, result) {
			if (!regex) {
				return true;
			}
			return new RegExp(regex).test(result);
		}

		function downloadCsv(el, isConfirm, singleRow = null) {
			if (isConfirm && !confirm("{{ 'threebrs.ui.shippingExport.confirmSendQuestion'|trans }}")) {
				return false;
			}

			let ids = singleRow !== null ? [singleRow] : getCheckedCheckboxesIds();
			let urlParams = ids.map(id => `ids[]=${id}`);

			{% for question in exporter.questionsArray %}
			let resultOk = false;
			do {
				let result = prompt("{{ question.label }}", "{{ question.defaultValue is not empty ? question.defaultValue : '' }}");
				if (typeof result === "undefined" || result === null) {
					return;
				} else if (testAnswer({% if question.regex is not null %}{{ question.regex }}{% else %}''{% endif %}, result)) {
					urlParams.push(`questions[{{ question.code }}]=${result}`);
					resultOk = true;
				}
			} while (!resultOk);
			{% endfor %}

			let urlParamsString = urlParams.filter(Boolean).join("&");
			urlParamsString = urlParamsString.length > 0 ? `?${urlParamsString}` : "";
			window.open(el.dataset.url + urlParamsString, "_blank");
			if (isConfirm) {
				window.location.href = el.dataset.changeStateUrl + urlParamsString;
			}
		}
	</script>
{% endblock %}
